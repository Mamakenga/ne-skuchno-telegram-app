// –°–∫—Ä–∏–ø—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è Telegram Mini App
// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å JSON —Ñ–∞–π–ª–æ–≤ —Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—è–º–∏

const fs = require('fs');
const path = require('path');

// –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ —Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—è–º–∏
const activityFiles = [
  'active-games.json',
  'creativity.json', 
  'learn-new.json',
  'cooking.json',
  'gifts.json',
  'experiments.json',
  'reading-stories.json'
];

// –î–æ–ø—É—Å—Ç–∏–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏
const validCategories = [
  'active_games', 'creativity', 'learn_new', 
  'cooking', 'gifts', 'experiments', 'reading_stories'
];

const validAgeGroups = ['3-5', '6-8', '9-12', '13-16', '17+', 'adult'];
const validDifficulties = ['easy', 'medium', 'hard'];
const validSeasons = ['spring', 'summer', 'autumn', 'winter', 'any'];
const validLocations = ['indoor', 'outdoor', 'any'];

function validateActivity(activity, fileName, index) {
  const errors = [];
  const warnings = [];

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
  if (!activity.id) errors.push(`${fileName}[${index}]: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª–µ 'id'`);
  if (!activity.title) errors.push(`${fileName}[${index}]: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª–µ 'title'`);
  if (!activity.category) errors.push(`${fileName}[${index}]: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª–µ 'category'`);
  if (!activity.instructions || !Array.isArray(activity.instructions)) {
    errors.push(`${fileName}[${index}]: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –ø–æ–ª–µ 'instructions'`);
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–Ω–∞—á–µ–Ω–∏–π –ø–æ–ª–µ–π
  if (activity.category && !validCategories.includes(activity.category)) {
    errors.push(`${fileName}[${index}]: –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è '${activity.category}'`);
  }

  if (activity.age_groups) {
    activity.age_groups.forEach(age => {
      if (!validAgeGroups.includes(age)) {
        errors.push(`${fileName}[${index}]: –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º–∞—è –≤–æ–∑—Ä–∞—Å—Ç–Ω–∞—è –≥—Ä—É–ø–ø–∞ '${age}'`);
      }
    });
  }

  if (activity.difficulty && !validDifficulties.includes(activity.difficulty)) {
    errors.push(`${fileName}[${index}]: –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å '${activity.difficulty}'`);
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
  if (activity.duration_minutes) {
    if (activity.duration_minutes < 5 || activity.duration_minutes > 180) {
      warnings.push(`${fileName}[${index}]: –Ω–µ–æ–±—ã—á–Ω–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å ${activity.duration_minutes} –º–∏–Ω—É—Ç`);
    }
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π
  if (activity.instructions) {
    if (activity.instructions.length < 3) {
      warnings.push(`${fileName}[${index}]: –º–∞–ª–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π (${activity.instructions.length}), —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –º–∏–Ω–∏–º—É–º 3`);
    }
    if (activity.instructions.length > 8) {
      warnings.push(`${fileName}[${index}]: –º–Ω–æ–≥–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π (${activity.instructions.length}), —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –º–∞–∫—Å–∏–º—É–º 8`);
    }
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
  if (!activity.materials || activity.materials.length === 0) {
    warnings.push(`${fileName}[${index}]: –Ω–µ —É–∫–∞–∑–∞–Ω—ã –º–∞—Ç–µ—Ä–∏–∞–ª—ã`);
  }

  return { errors, warnings };
}

function validateActivities() {
  console.log('üîç –ù–∞—á–∏–Ω–∞–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é –∫–æ–Ω—Ç–µ–Ω—Ç–∞...\n');

  let totalActivities = 0;
  let totalErrors = 0;
  let totalWarnings = 0;

  activityFiles.forEach(fileName => {
    console.log(`üìÅ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª: ${fileName}`);
    
    const filePath = path.join(__dirname, 'activities', fileName);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
    if (!fs.existsSync(filePath)) {
      console.log(`   ‚ö†Ô∏è  –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω`);
      return;
    }

    try {
      // –ß–∏—Ç–∞–µ–º –∏ –ø–∞—Ä—Å–∏–º JSON
      const fileContent = fs.readFileSync(filePath, 'utf8');
      const activities = JSON.parse(fileContent);

      if (!Array.isArray(activities)) {
        console.log(`   ‚ùå –§–∞–π–ª –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∞—Å—Å–∏–≤ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π`);
        return;
      }

      console.log(`   üìä –ù–∞–π–¥–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π: ${activities.length}`);
      totalActivities += activities.length;

      // –í–∞–ª–∏–¥–∏—Ä—É–µ–º –∫–∞–∂–¥—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
      activities.forEach((activity, index) => {
        const { errors, warnings } = validateActivity(activity, fileName, index + 1);
        
        totalErrors += errors.length;
        totalWarnings += warnings.length;

        errors.forEach(error => console.log(`   ‚ùå ${error}`));
        warnings.forEach(warning => console.log(`   ‚ö†Ô∏è  ${warning}`));
      });

      if (activities.length === 0) {
        console.log(`   ‚ö†Ô∏è  –§–∞–π–ª –ø—É—Å—Ç–æ–π`);
      }

    } catch (error) {
      console.log(`   üí• –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: ${error.message}`);
      totalErrors++;
    }

    console.log(''); // –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
  });

  // –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  console.log('üìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:');
  console.log(`‚úÖ –í—Å–µ–≥–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π: ${totalActivities}`);
  console.log(`‚ùå –û—à–∏–±–æ–∫: ${totalErrors}`);
  console.log(`‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: ${totalWarnings}`);

  if (totalErrors === 0) {
    console.log('\nüéâ –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ! –í—Å–µ —Ñ–∞–π–ª—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã.');
  } else {
    console.log('\nüö® –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ—à–∏–±–∫–∏! –ò—Å–ø—Ä–∞–≤—å—Ç–µ –∏—Ö –ø–µ—Ä–µ–¥ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ–º.');
  }

  return { totalActivities, totalErrors, totalWarnings };
}

// –ó–∞–ø—É—Å–∫ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø—Ä–∏ –ø—Ä—è–º–æ–º –≤—ã–∑–æ–≤–µ —Å–∫—Ä–∏–ø—Ç–∞
if (require.main === module) {
  validateActivities();
}

module.exports = { validateActivities, validateActivity };