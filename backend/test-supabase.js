const { createClient } = require('@supabase/supabase-js');
require('dotenv').config();

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Supabase –∫–ª–∏–µ–Ω—Ç–∞
const supabase = createClient(
  process.env.SUPABASE_URL,
  process.env.SUPABASE_SERVICE_KEY
);

async function testSupabaseConnection() {
  console.log('üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase...\n');
  
  try {
    // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    console.log('1Ô∏è‚É£ –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
    const { data, error } = await supabase
      .from('activities')
      .select('count', { count: 'exact' });
    
    if (error) {
      throw new Error(`–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: ${error.message}`);
    }
    
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!');
    console.log(`üìä –ó–∞–ø–∏—Å–µ–π –≤ —Ç–∞–±–ª–∏—Ü–µ activities: ${data.length}\n`);
    
    // –¢–µ—Å—Ç 2: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –∑–∞–ø–∏—Å–∏
    console.log('2Ô∏è‚É£ –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏...');
    const testActivity = {
      id: 'test_001',
      title: '–¢–µ—Å—Ç–æ–≤–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
      short_description: '–ö–æ—Ä–æ—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è —Ç–µ—Å—Ç–∞',
      full_description: '–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö',
      category: 'creativity',
      age_groups: ['6-8'],
      duration_minutes: 15,
      difficulty: 'easy',
      materials: ['–±—É–º–∞–≥–∞', '–∫–∞—Ä–∞–Ω–¥–∞—à–∏'],
      instructions: ['–í–æ–∑—å–º–∏ –±—É–º–∞–≥—É', '–ù–∞—Ä–∏—Å—É–π —á—Ç–æ-–Ω–∏–±—É–¥—å', '–ü–æ–∫–∞–∂–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç'],
      skills_developed: ['—Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ'],
      season: 'any',
      location: 'indoor',
      premium: false,
      tags: ['—Ç–µ—Å—Ç'],
      video_url: null,
      image_url: null,
      site_url: 'https://example.com/test',
      has_detailed_content: true,
      rating: 0,
      times_completed: 0
    };
    
    const { data: insertData, error: insertError } = await supabase
      .from('activities')
      .insert([testActivity])
      .select();
    
    if (insertError) {
      throw new Error(`–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏: ${insertError.message}`);
    }
    
    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å —Å–æ–∑–¥–∞–Ω–∞!');
    console.log(`üìÑ –°–æ–∑–¥–∞–Ω–æ –∑–∞–ø–∏—Å–µ–π: ${insertData.length}\n`);
    
    // –¢–µ—Å—Ç 3: –ß—Ç–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏
    console.log('3Ô∏è‚É£ –¢–µ—Å—Ç —á—Ç–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏...');
    const { data: readData, error: readError } = await supabase
      .from('activities')
      .select('*')
      .eq('id', 'test_001')
      .single();
    
    if (readError) {
      throw new Error(`–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏: ${readError.message}`);
    }
    
    console.log('‚úÖ –ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—á–∏—Ç–∞–Ω–∞!');
    console.log(`üìñ –ù–∞–∑–≤–∞–Ω–∏–µ: ${readData.title}`);
    console.log(`üìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${readData.category}\n`);
    
    // –¢–µ—Å—Ç 4: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏
    console.log('4Ô∏è‚É£ –¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏...');
    const { data: updateData, error: updateError } = await supabase
      .from('activities')
      .update({ rating: 4.5, times_completed: 10 })
      .eq('id', 'test_001')
      .select();
    
    if (updateError) {
      throw new Error(`–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏: ${updateError.message}`);
    }
    
    console.log('‚úÖ –ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!');
    console.log(`‚≠ê –†–µ–π—Ç–∏–Ω–≥: ${updateData[0].rating}`);
    console.log(`üî¢ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–π: ${updateData[0].times_completed}\n`);
    
    // –¢–µ—Å—Ç 5: –£–¥–∞–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –∑–∞–ø–∏—Å–∏
    console.log('5Ô∏è‚É£ –¢–µ—Å—Ç —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏...');
    const { error: deleteError } = await supabase
      .from('activities')
      .delete()
      .eq('id', 'test_001');
    
    if (deleteError) {
      throw new Error(`–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏: ${deleteError.message}`);
    }
    
    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å —É–¥–∞–ª–µ–Ω–∞!\n');
    
    // –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    console.log('6Ô∏è‚É£ –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã...');
    const { data: tableStructure } = await supabase
      .from('activities')
      .select('*')
      .limit(0);
    
    console.log('‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞!\n');
    
    console.log('üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!');
    console.log('‚úÖ Supabase –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ');
    console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ activities —Å–æ–∑–¥–∞–Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
    console.log('‚úÖ CRUD –æ–ø–µ—Ä–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
    console.log('\nüîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:');
    console.log('1. –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ .env —Ñ–∞–π–ª–µ');
    console.log('2. –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É');
    console.log('3. –ü—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å API –∫–ª—é—á–µ–π Supabase');
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
if (require.main === module) {
  testSupabaseConnection();
}

module.exports = testSupabaseConnection;