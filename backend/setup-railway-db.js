const { Pool } = require('pg');

// –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à connection string –∏–∑ Railway
const DATABASE_URL = 'postgresql://postgres:JVTHicuijnpiqUCFBwKdbCoNADmkHuna@tramway.proxy.rlwy.net:20902/railway';

const pool = new Pool({
  connectionString: DATABASE_URL,
  ssl: { rejectUnauthorized: false }
});

async function setupDatabase() {
  console.log('üöÄ –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Railway PostgreSQL...');
  
  try {
    // –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    const client = await pool.connect();
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!');
    client.release();

    // –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
    console.log('üîß –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É activities...');
    
    const createTableSQL = `
      CREATE TABLE IF NOT EXISTS activities (
        id VARCHAR(255) PRIMARY KEY,
        title VARCHAR(255) NOT NULL,
        short_description VARCHAR(500) NOT NULL,
        full_description TEXT NOT NULL,
        category VARCHAR(100) NOT NULL,
        age_groups TEXT[],
        duration_minutes INTEGER NOT NULL,
        difficulty VARCHAR(20) DEFAULT 'easy',
        materials TEXT[],
        instructions TEXT[] NOT NULL,
        skills_developed TEXT[],
        season VARCHAR(20) DEFAULT 'any',
        location VARCHAR(20) DEFAULT 'indoor',
        premium BOOLEAN DEFAULT false,
        tags TEXT[],
        rating NUMERIC(3,2) DEFAULT 0,
        times_completed INTEGER DEFAULT 0,
        created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
      );
      
      CREATE INDEX IF NOT EXISTS idx_activities_category ON activities(category);
      CREATE INDEX IF NOT EXISTS idx_activities_age_groups ON activities USING GIN(age_groups);
      CREATE INDEX IF NOT EXISTS idx_activities_rating ON activities(rating DESC);
    `;

    await pool.query(createTableSQL);
    console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ activities —Å–æ–∑–¥–∞–Ω–∞!');

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –∑–∞–ø–∏—Å–∏
    console.log('üìù –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å...');
    
    const insertSQL = `
      INSERT INTO activities (
        id, title, short_description, full_description, category,
        age_groups, duration_minutes, difficulty, materials, instructions,
        skills_developed, season, location, premium, tags
      ) VALUES (
        'test_railway_001',
        '–¢–µ—Å—Ç–æ–≤–∞—è Railway –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
        '–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç—É Railway PostgreSQL',
        '–≠—Ç–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å–æ–∑–¥–∞–Ω–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã Railway PostgreSQL —á–µ—Ä–µ–∑ Node.js',
        'creativity',
        ARRAY['6-8', '9-12'],
        15,
        'easy',
        ARRAY['–±—É–º–∞–≥–∞', '–∫–∞—Ä–∞–Ω–¥–∞—à'],
        ARRAY['–í–æ–∑—å–º–∏ –±—É–º–∞–≥—É', '–ù–∞—Ä–∏—Å—É–π —á—Ç–æ-–Ω–∏–±—É–¥—å', '–ü–æ–∫–∞–∂–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç'],
        ARRAY['—Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ', '–º–µ–ª–∫–∞—è –º–æ—Ç–æ—Ä–∏–∫–∞'],
        'any',
        'indoor',
        false,
        ARRAY['—Ç–µ—Å—Ç', 'railway']
      ) ON CONFLICT (id) DO NOTHING;
    `;

    await pool.query(insertSQL);
    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å –¥–æ–±–∞–≤–ª–µ–Ω–∞!');

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    const result = await pool.query('SELECT COUNT(*) as total FROM activities');
    console.log(`üìä –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π –≤ —Ç–∞–±–ª–∏—Ü–µ: ${result.rows[0].total}`);

    const testResult = await pool.query('SELECT id, title FROM activities LIMIT 3');
    console.log('üìÑ –ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø–∏—Å–µ–π:');
    testResult.rows.forEach(row => {
      console.log(`   - ${row.id}: ${row.title}`);
    });

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  } finally {
    await pool.end();
    console.log('üëã –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö');
  }
}

setupDatabase();